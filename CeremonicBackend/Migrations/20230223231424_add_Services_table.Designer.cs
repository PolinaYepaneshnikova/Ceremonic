// <auto-generated />
using CeremonicBackend.DB.Relational;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CeremonicBackend.Migrations
{
    [DbContext(typeof(CeremonicRelationalDbContext))]
    [Migration("20230223231424_add_Services_table")]
    partial class add_Services_table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("CeremonicBackend.DB.Relational.ScalarReturn<int>", b =>
                {
                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");
                });

            modelBuilder.Entity("CeremonicBackend.DB.Relational.ServiceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("CeremonicBackend.DB.Relational.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CeremonicBackend.DB.Relational.UserLoginInfoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserLoginInfos");
                });

            modelBuilder.Entity("CeremonicBackend.DB.Relational.UserEntity", b =>
                {
                    b.HasOne("CeremonicBackend.DB.Relational.UserLoginInfoEntity", "LoginInfo")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoginInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
